#!/usr/bin/env node

var colors = require('colors')

var config = require('../lib/config')

require('command-router')
.on('notfound', help)
.option({ name: 'help'
, alias: 'h'
, type: Boolean
})
.option({ name: 'bucket'
, alias: 'b'
, type: String
})
.option({ name: 'key'
, alias: 'k'
, type: String
})
.option({ name: 'secret'
, alias: 's'
, type: String
})
.option({ name: 'region'
, alias: 'r'
, type: String
, default: 'us-west-1'
})
.option({ name: 'dirname'
, alias: 'd'
, type: String
})
.option({ name: 'header'
, alias: 'H'
, type: Array
})
.option({ name: 'mime'
, alias: 'm'
, type: Array
})
.option({ name: 'gzip'
, alias: 'g'
, type: Boolean
, default: true
})
.option({ name: 'watch'
, alias: 'w'
, type: Boolean
})
.option({ name: 'clean'
, alias: 'c'
, type: Boolean
})
.command('config set :key :value', function(params, options){
  config.set(params.key, params.value, function(err, data){
    if (err) throw err
    console.log('config saved to .beam')
  })
})
.command('config get ?:key?', function(params, options){
  config.get(params.key, function(err, data){
    if (err) throw err
    console.log(data)
  })
})
.command('*', function(params, options){
  if (options.help) help()

  var dirname = params.splats[0] || process.cwd()
    , beamer = require('../lib')
    , watcher = require('../lib/watcher')
    , fs = require('graceful-fs')

  console.log(dirname)

  config.get(function(err, data){
    // merge CLI opts onto the config
    for (var key in options) if (options[key]) data[key] = options[key]

    console.log() // add a newline

    if (options.watch) {
      return watcher(dirname)
      .configure(data)
      .on('error', function(err){
        console.error()
        console.error('Can\'t upload :('.red)
        console.error()
        console.error('  ' + err.message)
        console.error()

        process.exit(1)
      })
      .on('response', function(res){
        console.log('    ✓'.green
        , res.req.method
        , res.statusCode
        , res.req.url.grey)

        if (options.clean) fs.unlink(res.req.filename, function(err){
          if (err) throw err

          console.log('    ✘'.red
          , 'removed file:'
          , res.req.filename.grey)
        })
      })
    }

    beamer(dirname)
    .configure(data)
    .on('error', function(err){
      console.error()
      console.error('Can\'t upload :('.red)
      console.error()
      console.error('  ' + err.message)
      console.error()

      process.exit(1)
    })
    .on('response', function(res){
      console.log('    ✓'.green
      , res.req.method
      , res.statusCode
      , res.req.url.grey)
    })
    .on('end', function(){
      console.log()
    })

  })
})
.parse(process.argv)

function help(action){
  var action = action || 'beam'
    , path = require('path')
    , fs = require('graceful-fs')
    , file = path.resolve(__dirname, '../doc/' + action + '.md')

  fs.exists(file, function(exists){
    if (! exists) file = path.resolve(__dirname, '../doc/beam.md')

    console.log() // newline before the doc output

    fs.createReadStream(file, { encoding: 'utf8' })
    .on('data', console.log)
    .on('error', function(err){ throw err })
    .on('end', function(){ process.exit(1) })
  })
}
