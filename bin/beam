#!/usr/bin/env node

require('command-router')
.on('notfound', help)
.option({ name: 'bucket'
, alias: 'b'
, type: String
})
.option({ name: 'key'
, alias: 'k'
, type: String
})
.option({ name: 'secret'
, alias: 's'
, type: String
})
.option({ name: 'region'
, alias: 'r'
, type: String
, default: 'us-west-1'
})
.option({ name: 'dirname'
, alias: 'd'
, type: String
})
.option({ name: 'header'
, alias: 'h'
, type: Array
})
.option({ name: 'mime'
, alias: 'm'
, type: Array
})
.option({ name: 'gzip'
, alias: 'g'
, type: Boolean
, default: true
})
.command(':dirname', function(params, options){
  console.log('dirname', params.dirname)
  console.log('options', options)

  var beamer = require('../')

  beamer(params.dirname)
  .configure(options)
  .on('error', function(err){
    console.error()
    console.error('Can\'t upload :(')
    console.error()
    console.error('  ' + err.message)
    console.error()

    process.exit(1)
  })
  .on('start', function(){})
  .on('updload', function(){})
  .on('delete', function(){})
  .on('end', function(){})

})
.parse(process.argv)

function help(action){
  var action = action || 'beam'
    , path = require('path')
    , fs = require('fs')
    , file = path.resolve(__dirname, '../doc/' + action + '.md')

  fs.exists(file, function(exists){
    if (! exists) file = path.resolve(__dirname, '../doc/beam.md')

    console.log() // newline before the doc output

    fs.createReadStream(file, { encoding: 'utf8' })
    .on('data', console.log)
    .on('error', function(err){ throw err })
    .on('end', function(){ process.exit(1) })
  })
}
